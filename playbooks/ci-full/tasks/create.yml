---
- name: provision test instances
  hosts: local
  connection: local
  vars_files:
  - ../vars/main.yml
  tasks:
    - include: keypair.yml

    - name: create the security group
      os_security_group:
        name: "{{ testenv_security_groups }}"
        description: "{{ testenv_instance_prefix }} {{ testenv_security_groups_description }}"
        state: present
      register: testenv_security_group

    - name: create security group rules
      os_security_group_rule:
        security_group: "{{ testenv_security_groups }}"
        protocol: "{{ item.proto | default(omit) }}"
        port_range_min: "{{ item.port | default(omit) }}"
        port_range_max: "{{ item.port | default(omit) }}"
        remote_ip_prefix: "{{ item.cidr | default(omit) }}"
        remote_group: "{{ item.group | default(omit) }}"
        ethertype: "{{ item.ethertype | default(omit) }}"
        state: present
      with_items: "{{ testenv_security_group_rules }}"

    - name: create instances
      os_server:
        name: "{{ item }}"
        image: "{{ testenv_image_id }}"
        key_name: "{{ testenv_keypair_name }}"
        security_groups: "{{ testenv_security_groups }}"
        wait: yes
        timeout: 200
        flavor: 4
        nics:
          - net-name: internal
        auto_floating_ip: false
      with_items: "{{ testenv_instance_names }}"
      register: instances

    - name: associate a floating IP to instances
      os_floating_ip:
        server: "{{ item }}"
        network: external
        reuse: true
        wait: true
      with_items: "{{ testenv_instance_names }}"
      register: testenv_floating_ips
      when: not use_private_ips|default('False')|bool

    - name: wait for instances to boot using public ip
      wait_for:
        port: 22
        delay: 5
        timeout: 600
        host: "{{ item.floating_ip.floating_ip_address }}"
      with_items: "{{ testenv_floating_ips.results }}"
      when: not use_private_ips|default('False')|bool

    - name: wait for instances to boot using private ip
      wait_for:
        port: 22
        delay: 5
        timeout: 600
        host: "{{ item.openstack.addresses.internal.0.addr }}"
      with_items: "{{ instances.results }}"
      when: use_private_ips|default('False')|bool
